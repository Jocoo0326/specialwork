plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    namespace 'com.jocoo.swork'
    compileSdk compile_sdk_version

    defaultConfig {
        applicationId "com.jocoo.swork"
        versionCode 1
        versionName "1.0"

        minSdk min_sdk_version
        targetSdk target_sdk_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        flavorDimensions "api"
    }

    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    signingConfigs {
        releaseConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        uat {
            matchingFallbacks = ['debug']
            minifyEnabled false
            signingConfig signingConfigs.releaseConfig
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

//    productFlavors {
//        cn {
//            dimension "api"
//            buildConfigField("String", "BASE_URL", "\"http://php7.zh133.com\"")
//            buildConfigField("String", "ZENDESK_LIVE_CHAT_ACCOUNT_KEY", "\"sARxKoaa9eEorGfx17UcTQpiLh7DnuvC\"")
//        }

//        us {
//            dimension "api"
//            buildConfigField("String", "BASE_URL", "\"https://venue.hopou.com\"")
//            buildConfigField("String", "ZENDESK_LIVE_CHAT_ACCOUNT_KEY", "\"sARxKoaa9eEorGfx17UcTQpiLh7DnuvC\"")
//        }
//    }

    applicationVariants.all { variant ->
        if (variant.buildType.name.equalsIgnoreCase("debug")) return
        variant.outputs.all {
            outputFileName = outputFileName.replace(".apk",
                "-V${variant.versionName}-C${variant.versionCode}-${currentTimestamp()}.apk")
            outputFileName = outputFileName.replace("app", "specialwork")
            variant.getPackageApplicationProvider().get().outputDirectory = new File(getHomeDirectory(apk_dir))
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

static def getHomeDirectory(String name) {
    return "${System.properties['user.home']}${File.separator}${name}"
}

static def currentTimestamp() {
    return new Date().format("yyyyMMddHHmm")
}

dependencies {

    implementation project(':core')
    implementation project(':common-ui')
    //multidex
    implementation "androidx.multidex:multidex:$multidex_version"
    //moshi json解析
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    //router
    implementation "com.alibaba:arouter-api:$arouter_version"
    kapt "com.alibaba:arouter-compiler:$arouter_version"

    //hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    implementation uiLibrary

    testImplementation testLibraries
    androidTestImplementation androidTestLibraries
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
kapt {
    correctErrorTypes true
}